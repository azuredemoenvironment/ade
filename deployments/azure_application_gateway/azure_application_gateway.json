{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location For All Resources."
            }
        },
        "applicationGatewayPublicIPAddressName": {
            "type": "string",
            "metadata": {
                "description": "The Name of the Application Gateway Public IP Address."
            }
        },
        "inspectorGadgetWafPolicyName": {
            "type": "string",
            "metadata": {
                "description": "The Name of the Inspector Gadget WAF Policy."
            }
        },
        "applicationGatewayName": {
            "type": "string",
            "metadata": {
                "description": "The Name of the Application Gateway."
            }
        },
        "sslCertificateName":{
            "type": "string",
            "metadata": {
                "description": "The Name of the SSL Certificate."
            }
        },
        "sslCertificateData":{
            "type": "string",
            "metadata": {
                "description": "The SSL Certificate Data in the Key Vault."
            }
        },
        "sslCertificateDataPassword":{
            "type": "string",
            "metadata": {
                "description": "The Password for the SSL Certificate Data in the Key Vault."
            }
        },
        "virtualNetwork01ResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The Name of Virtual Network 01 Resource Group."
            }
        },
        "virtualNetwork01Name": {
            "type": "string",
            "metadata": {
                "description": "The Name of Virtual Network 01."
            }
        },
        "imageResizerFQDN":{
            "type": "string",
            "metadata": {
                "description": "The FQDN of the Image Resizer App Service."
            }
        },
        "imageResizerHostName":{
            "type": "string",
            "metadata": {
                "description": "The Host Name of Image Resizer."
            }
        },
        "inspectorGadgetFQDN":{
            "type": "string",
            "metadata": {
                "description": "The FQDN of the Inspector Gadget App Service."
            }
        },
        "inspectorGadgetHostName":{
            "type": "string",
            "metadata": {
                "description": "The Host Name of Inspector Gadget."
            }
        },
        "nTierHostName":{
            "type": "string",
            "metadata": {
                "description": "The Host Name of NTier."
            }
        },
        "sqlToDoFQDN":{
            "type": "string",
            "metadata": {
                "description": "The FQDN of the SQL ToDo App Service."
            }
        },
        "sqlToDoHostName":{
            "type": "string",
            "metadata": {
                "description": "The Host Name of SQL ToDo."
            }
        },
        "wordPressHostName":{
            "type": "string",
            "metadata": {
                "description": "The Host Name of WordPress."
            }
        },
        "managedIdentityResourceGroupName":{
            "type": "string",
            "metadata": {
                "description": "The Name of the Managed Identity Resource Group."
            }
        },
        "managedIdentityName":{
            "type": "string",
            "metadata": {
                "description": "The Name of the Managed Identity."
            }
        },
        "logAnalyticsWorkspaceResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The Name of the Log Analytics Workspace Resource Group."
            }
        },
        "logAnalyticsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "The Name of the Log Analytics Workspace."
            }
        }
    },
    "variables": {
        "applicationGatewaySubnetName": "ApplicationGatewaySubnet",
        "imageResizerBackendPoolName": "backendpool-imageresizer",
        "imageResizerHealthProbeName": "healthprobe-imageresizer",        
        "imageResizerHTTPSettingName": "httpsetting-imageresizer",
        "imageResizerListenerName": "listener-imageresizer",
        "imageResizerRuleName": "routingrule-imageresizer",
        "inspectorGadgetBackendPoolName": "backendpool-inspectorgadget",
        "inspectorGadgetHealthProbeName": "healthprobe-inspectorgadget",        
        "inspectorGadgetHTTPSettingName": "httpsetting-inspectorgadget",
        "inspectorGadgetListenerName": "listener-inspectorgadget",
        "inspectorGadgetRuleName": "routingrule-inspectorgadget",
        "nTierBackendPoolName": "backendpool-ntier",
        "nTierHealthProbeName": "healthprobe-ntier",
        "nTierHTTPSettingName": "httpsetting-ntier",
        "nTierListenerName": "listener-ntier",
        "nTierRuleName": "routingrule-ntier",
        "nTierWeb1IPAddress": "10.102.10.4",
        "nTierWeb2IPAddress": "10.102.10.5",
        "sqlToDoBackendPoolName": "backendpool-sqltodo",
        "sqlToDoHealthProbeName": "healthprobe-sqltodo",
        "sqlToDoHTTPSettingName": "httpsetting-sqltodo",
        "sqlToDoListenerName": "listener-sqltodo",
        "sqlToDoRuleName": "routingrule-sqltodo",
        "wordPressBackendPoolName": "backendpool-wordpress",
        "wordPressHealthProbeName": "healthprobe-wordpress",
        "wordPressHTTPSettingName": "httpsetting-wordpress",
        "wordPressListenerName": "listener-wordpress",
        "wordPressRuleName": "routingrule-wordpress",
        "wordPressContainerIPAddress": "10.103.20.5",
        "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]",
        "userAssignedManagedIdentity": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('managedIdentityResourceGroupName'), '/providers/','Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('managedIdentityName'))]",
        "logAnalyticsWorkspaceID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('logAnalyticsWorkspaceResourceGroupName'), '/providers/','Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]",
        "environmentName": "Production",
        "functionName": "Networking",
        "costCenterName": "IT"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[parameters('applicationGatewayPublicIPAddressName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "tags": {
                "Environment": "[variables('environmentName')]",
                "Function": "[variables('functionName')]",
                "Cost Center": "[variables('costCenterName')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/', parameters('applicationGatewayPublicIPAddressName'), '-Diagnostics')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('applicationGatewayPublicIPAddressName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "name": "[concat(parameters('applicationGatewayPublicIPAddressName'), '-Diagnostics')]",
                        "workspaceId": "[variables('logAnalyticsWorkspaceID')]",
                        "logs": [
                            {
                                "category": "DDoSProtectionNotifications",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            },
                            {
                                "category": "DDoSMitigationFlowLogs",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            },
                            {
                                "category": "DDoSMitigationReports",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
            "apiVersion": "2020-05-01",
            "name": "[parameters('inspectorGadgetWafPolicyName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('applicationGatewayPublicIPAddressName'))]"
            ],
            "tags": {
                "Environment": "Production",
                "Function": "Networking",
                "Cost Center": "IT"
            },
            "properties": {
                "customRules": [
                    {
                        "name": "inspectorgadget",
                        "priority": 1,
                        "ruleType": "MatchRule",
                        "action": "Allow",
                        "matchConditions": [
                            {
                                "matchVariables": [
                                    {
                                        "variableName": "RemoteAddr"
                                    }
                                ],
                                "operator": "IPMatch",
                                "negationConditon": false,
                                "matchValues": [
                                    "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('applicationGatewayPublicIPAddressName'))).ipAddress]"
                                ],
                                "transforms": []
                            }
                        ]
                    }
                ],
                "policySettings": {
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100,
                    "state": "Enabled",
                    "mode": "Detection"
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "OWASP",
                            "ruleSetVersion": "3.0",
                            "ruleGroupOverrides": []
                        }
                    ],
                    "exclusions": []
                }
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-09-01",
            "name": "[parameters('applicationGatewayName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('applicationGatewayPublicIPAddressName'))]"
            ],
            "tags": {
                "Environment": "[variables('environmentName')]",
                "Function": "[variables('functionName')]",
                "Cost Center": "[variables('costCenterName')]"
            },
            "properties": {
                "sku": {
                    "name": "Waf_v2",
                    "tier": "Waf_v2",
                    "capacity": 1
                },
                "enableHttp2": false,
                "sslCertificates": [
                    {
                        "name": "[parameters('sslCertificateName')]",
                        "properties": {
                            "data": "[parameters('sslCertificateData')]",
                            "password": "[parameters('sslCertificateDataPassword')]"
                        }
                    }
                ],
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIPConfig",
                        "properties": {
                            "subnet": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('virtualNetwork01ResourceGroupName'), '/providers/','Microsoft.Network/virtualNetworks/', parameters('virtualNetwork01Name'), '/subnets/', variables('applicationGatewaySubnetName'))]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('applicationGatewayPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_443",
                        "properties": {
                            "port": 443
                        }
                    },
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('imageResizerBackendPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[parameters('imageResizerFQDN')]"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('inspectorGadgetBackendPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[parameters('inspectorGadgetFQDN')]"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('nTierBackendPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "[variables('nTierWeb1IPAddress')]"
                                },
                                {
                                    "ipAddress": "[variables('nTierWeb2IPAddress')]"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('sqlToDoBackendPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[parameters('sqlToDoFQDN')]"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('wordPressBackendPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "[variables('wordPressContainerIPAddress')]"
                                }
                            ]
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('imageResizerHealthProbeName')]",
                        "properties": {
                            "backendHttpSettings": [
                                {
                                    "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('imageResizerHTTPSettingName'))]"
                                }
                            ],
                            "interval": 30,
                            "minServers": 0,
                            "path": "/",
                            "protocol": "Http",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true
                        }
                    },
                    {
                        "name": "[variables('inspectorGadgetHealthProbeName')]",
                        "properties": {
                            "backendHttpSettings": [
                                {
                                    "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('inspectorGadgetHTTPSettingName'))]"
                                }
                            ],
                            "interval": 30,
                            "minServers": 0,
                            "path": "/",
                            "protocol": "Http",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true
                        }
                    },
                    {
                        "name": "[variables('nTierHealthProbeName')]",
                        "properties": {
                            "backendHttpSettings": [
                                {
                                    "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('nTierHTTPSettingName'))]"
                                }
                            ],
                            "interval": 30,
                            "minServers": 0,
                            "path": "/",
                            "protocol": "Http",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true
                        }
                    },
                    {
                        "name": "[variables('sqlToDoHealthProbeName')]",
                        "properties": {
                            "backendHttpSettings": [
                                {
                                    "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('sqlToDoHTTPSettingName'))]"
                                }
                            ],
                            "interval": 30,
                            "minServers": 0,
                            "path": "/",
                            "protocol": "Http",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true
                        }
                    },
                    {
                        "name": "[variables('wordPressHealthProbeName')]",
                        "properties": {
                            "backendHttpSettings": [
                                {
                                    "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('wordPressHTTPSettingName'))]"
                                }
                            ],
                            "interval": 30,
                            "minServers": 0,
                            "path": "/",
                            "protocol": "Http",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('imageResizerHTTPSettingName')]",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 30,
                            "pickHostNameFromBackendAddress": true,
                            "probe": {
                                "id": "[concat(variables('applicationGatewayID'), '/probes/', variables('imageResizerHealthProbeName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('inspectorGadgetHTTPSettingName')]",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 30,
                            "pickHostNameFromBackendAddress": true,
                            "probe": {
                                "id": "[concat(variables('applicationGatewayID'), '/probes/', variables('inspectorGadgetHealthProbeName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('nTierHTTPSettingName')]",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 30,
                            "pickHostNameFromBackendAddress": true,
                            "probe": {
                                "id": "[concat(variables('applicationGatewayID'), '/probes/', variables('nTierHealthProbeName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('sqlToDoHTTPSettingName')]",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 30,
                            "pickHostNameFromBackendAddress": true,
                            "probe": {
                                "id": "[concat(variables('applicationGatewayID'), '/probes/', variables('sqlToDoHealthProbeName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('wordPressHTTPSettingName')]",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 30,
                            "pickHostNameFromBackendAddress": false,
                            "hostName": "[parameters('wordPressHostName')]",
                            "probe": {
                                "id": "[concat(variables('applicationGatewayID'), '/probes/', variables('wordPressHealthProbeName'))]"
                            }
                        }
                    }
                ],
                "httpListeners":[
                    {
                        "name": "[variables('imageResizerListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(variables('applicationGatewayID'), '/sslCertificates/', parameters('sslCertificateName'))]"
                            },
                            "hostName": "[parameters('imageResizerHostName')]",
                            "requireServerNameIndication": true
                        }
                    },
                    {
                        "name": "[variables('inspectorGadgetListenerName')]",
                        "properties": {
                            "firewallPolicy": {
                                "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('inspectorGadgetWafPolicyName'))]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(variables('applicationGatewayID'), '/sslCertificates/', parameters('sslCertificateName'))]"
                            },
                            "hostName": "[parameters('inspectorGadgetHostName')]",
                            "requireServerNameIndication": true
                        }
                    },
                    {
                        "name": "[variables('nTierListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(variables('applicationGatewayID'), '/sslCertificates/', parameters('sslCertificateName'))]"
                            },
                            "hostName": "[parameters('nTierHostName')]",
                            "requireServerNameIndication": true
                        }
                    },
                    {
                        "name": "[variables('sqlToDoListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(variables('applicationGatewayID'), '/sslCertificates/', parameters('sslCertificateName'))]"
                            },
                            "hostName": "[parameters('sqlToDoHostName')]",
                            "requireServerNameIndication": true
                        }
                    },
                    {
                        "name": "[variables('wordPressListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayID'), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": {
                                "id": "[concat(variables('applicationGatewayID'), '/sslCertificates/', parameters('sslCertificateName'))]"
                            },
                            "hostName": "[parameters('wordPressHostName')]",
                            "requireServerNameIndication": true
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "[variables('imageResizerRuleName')]",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/', variables('imageResizerListenerName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', variables('imageResizerBackendPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('imageResizerHTTPSettingName'))]"
                            }
                        }
                    },
                    {
                        "Name": "[variables('inspectorGadgetRuleName')]",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/', variables('inspectorGadgetListenerName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', variables('inspectorGadgetBackendPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('inspectorGadgetHTTPSettingName'))]"
                            }
                        }
                    },
                    {
                        "Name": "[variables('nTierRuleName')]",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/', variables('nTierListenerName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', variables('nTierBackendPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('nTierHTTPSettingName'))]"
                            }
                        }
                    },
                    {
                        "Name": "[variables('sqlToDoRuleName')]",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/', variables('sqlToDoListenerName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', variables('sqlToDoBackendPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('sqlToDoHTTPSettingName'))]"
                            }
                        }
                    },
                    {
                        "Name": "[variables('wordPressRuleName')]",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/', variables('wordPressListenerName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', variables('wordPressBackendPoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/', variables('wordPressHTTPSettingName'))]"
                            }
                        }
                    }
                ],
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0"
                }
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('userAssignedManagedIdentity')]": {}
                }
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/', parameters('applicationGatewayName'), '-Diagnostics')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "name": "[concat(parameters('applicationGatewayName'), '-Diagnostics')]",
                        "workspaceId": "[variables('logAnalyticsWorkspaceID')]",
                        "logs": [
                            {
                                "category": "ApplicationGatewayAccessLog",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            },
                            {
                                "category": "ApplicationGatewayPerformanceLog",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            },
                            {
                                "category": "ApplicationGatewayFirewallLog",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true,
                                "retentionPolicy": {
                                    "days": 7,
                                    "enabled": true
                                }
                            }
                        ]
                    }
                }
            ]
        }        
    ]
}