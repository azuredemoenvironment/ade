version: "3.8"

services:
  # This is the primary Azure Demo Environment Image, and will be used as the main
  # interactive runtime
  ade:
    image: ade
    container_name: ade
    build:
      context: .
      dockerfile: ./Dockerfile
    stdin_open: true
    tty: true
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./:/opt/ade:rw
      - ./profile.ps1:/root/.config/powershell/Microsoft.PowerShell_profile.ps1
  # ADE App
  ########################################################
  # These images are the main application that gets
  # deployed to the IaaS, PaaS, and AKS infrastructure
  ade_reverseproxy:
    # Provides a reverse-proxy to allow hostname-based
    # access to services inside our container network
    image: nginx:latest
    container_name: ade_reverseproxy
    volumes:
      - ./app/ADE.Local/ADE.ReverseProxy/nginx.conf:/etc/nginx/nginx.conf
      - ./app/ADE.Local/ADE.ReverseProxy/logs/:/etc/nginx/logs/
    ports:
      - 8080:8080
      - 8888:8888
  ade_apigateway:
    image: ade-apigateway
    container_name: ade_apigateway
    build:
      context: ./app/ADE.Services/src/
      dockerfile: ./ADE.ApiGateway/Dockerfile
      args:
        - BuildConfiguration
    expose:
      - "80"
    environment:
      - ADE__APIGATEWAYURI
      - ADE__BLOBSTORAGECONNECTIONSTRING
      - ADE__COSMOSDBCONNECTIONSTRING
      - ADE__DATAINGESTORSERVICEURI
      - ADE__DATAREPORTERSERVICEURI
      - ADE__ENVIRONMENT
      - ADE__MARIADBCONNECTIONSTRING
      - ADE__POSTGRESQLCONNECTIONSTRING
      - ADE__SQLSERVERCONNECTIONSTRING
      - ADE__USERSERVICEURI
      - CONNECTIONSTRINGS__APPCONFIG
      - APPLICATIONINSIGHTS__CONNECTIONSTRING
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS
      - LOGGING__CONSOLE__LOGLEVEL__DEFAULT
      - LOGGING__LOGLEVEL__DEFAULT
  ade_frontend:
    image: ade-frontend
    container_name: frontend
    build:
      context: ./app/ADE.FrontEnd/
      dockerfile: ./Dockerfile
      args:
        - BuildConfiguration
    expose:
      - "80"
    environment:
      - CONNECTIONSTRINGS__APPCONFIG
      - ADE__ENVIRONMENT
  ade_dataingestorservice:
    image: ade-dataingestorservice
    container_name: ade_dataingestorservice
    build:
      context: ./app/ADE.Services/src/
      dockerfile: ./ADE.DataIngestorService/Dockerfile
      args:
        - BuildConfiguration
    expose:
      - "80"
    environment:
      - ADE__APIGATEWAYURI
      - ADE__BLOBSTORAGECONNECTIONSTRING
      - ADE__COSMOSDBCONNECTIONSTRING
      - ADE__DATAINGESTORSERVICEURI
      - ADE__DATAREPORTERSERVICEURI
      - ADE__ENVIRONMENT
      - ADE__MARIADBCONNECTIONSTRING
      - ADE__POSTGRESQLCONNECTIONSTRING
      - ADE__SQLSERVERCONNECTIONSTRING
      - ADE__USERSERVICEURI
      - APPLICATIONINSIGHTS__CONNECTIONSTRING
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS
      - CONNECTIONSTRINGS__APPCONFIG
      - LOGGING__CONSOLE__LOGLEVEL__DEFAULT
      - LOGGING__LOGLEVEL__DEFAULT
  ade_userservice:
    image: ade-userservice
    container_name: ade_userservice
    build:
      context: ./app/ADE.Services/src/
      dockerfile: ./ADE.UserService/Dockerfile
      args:
        - BuildConfiguration
    expose:
      - "80"
    environment:
      - ADE__APIGATEWAYURI
      - ADE__BLOBSTORAGECONNECTIONSTRING
      - ADE__COSMOSDBCONNECTIONSTRING
      - ADE__DATAINGESTORSERVICEURI
      - ADE__DATAREPORTERSERVICEURI
      - ADE__ENVIRONMENT
      - ADE__MARIADBCONNECTIONSTRING
      - ADE__POSTGRESQLCONNECTIONSTRING
      - ADE__SQLSERVERCONNECTIONSTRING
      - ADE__USERSERVICEURI
      - APPLICATIONINSIGHTS__CONNECTIONSTRING
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS
      - CONNECTIONSTRINGS__APPCONFIG
      - LOGGING__CONSOLE__LOGLEVEL__DEFAULT
      - LOGGING__LOGLEVEL__DEFAULT
  ade_datareporterservice:
    image: ade-datareporterservice
    container_name: ade_datareporterservice
    build:
      context: ./app/ADE.Services/src/
      dockerfile: ./ADE.DataReporterService/Dockerfile
      args:
        - BuildConfiguration
    expose:
      - "80"
    environment:
      - ADE__APIGATEWAYURI
      - ADE__BLOBSTORAGECONNECTIONSTRING
      - ADE__COSMOSDBCONNECTIONSTRING
      - ADE__DATAINGESTORSERVICEURI
      - ADE__DATAREPORTERSERVICEURI
      - ADE__ENVIRONMENT
      - ADE__MARIADBCONNECTIONSTRING
      - ADE__POSTGRESQLCONNECTIONSTRING
      - ADE__SQLSERVERCONNECTIONSTRING
      - ADE__USERSERVICEURI
      - APPLICATIONINSIGHTS__CONNECTIONSTRING
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS
      - CONNECTIONSTRINGS__APPCONFIG
      - LOGGING__CONSOLE__LOGLEVEL__DEFAULT
      - LOGGING__LOGLEVEL__DEFAULT
  ade_eventingestorservice:
    image: ade-eventingestorservice
    container_name: ade_eventingestorservice
    build:
      context: ./app/ADE.Services/src/
      dockerfile: ./ADE.EventIngestorService/Dockerfile
      args:
        - BuildConfiguration
    expose:
      - "80"
    environment:
      - ADE__APIGATEWAYURI
      - ADE__BLOBSTORAGECONNECTIONSTRING
      - ADE__COSMOSDBCONNECTIONSTRING
      - ADE__DATAINGESTORSERVICEURI
      - ADE__DATAREPORTERSERVICEURI
      - ADE__ENVIRONMENT
      - ADE__MARIADBCONNECTIONSTRING
      - ADE__POSTGRESQLCONNECTIONSTRING
      - ADE__SQLSERVERCONNECTIONSTRING
      - ADE__USERSERVICEURI
      - APPLICATIONINSIGHTS__CONNECTIONSTRING
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS
      - CONNECTIONSTRINGS__APPCONFIG
      - LOGGING__CONSOLE__LOGLEVEL__DEFAULT
      - LOGGING__LOGLEVEL__DEFAULT
  # Load Testing
  ########################################################
  # These images run load tests against the ADE app
  ade_loadtesting_gatling:
    image: ade-loadtesting-gatling
    container_name: ade_loadtesting_gatling
    build:
      context: ./test/ADE.LoadTests/gatling
      dockerfile: ./Dockerfile
    network_mode: host
    depends_on:
      - ade_loadtesting_grafana
    environment:
      - JAVA_OPTS=-Dgatling.data.graphite.host=${GRAPHITE_HOST}
        -Dgatling.data.graphite.port=${GRAPHITE_PORT}
        -DwebFrontEndDomain=${WEB_FRONTEND_DOMAIN}
        -DwebBackEndDomain=${WEB_BACKEND_DOMAIN} -DredisHost=${REDIS_HOST}
        -DredisPort=${REDIS_PORT} -DusersPerSecond=${USERS_PER_SECOND}
        -DmaxUsersPerSecond=${MAX_USERS_PER_SECOND}
        -DoverMinutes=${OVER_MINUTES} -Djsse.enableSNIExtension=false
    volumes:
      - ./test/ADE.LoadTests/gatling/conf:/opt/gatling/conf:cached
      - ./test/ADE.LoadTests/gatling/results:/opt/gatling/results
      - ./test/ADE.LoadTests/gatling/simulations:/opt/gatling/user-files/simulations:cached
      - ./test/ADE.LoadTests/gatling/data:/opt/gatling/user-files/data:cached
  ade_loadtesting_redis:
    image: ade-loadtesting-redis
    container_name: redis
    build:
      context: ./test/ADE.LoadTests/redis
      dockerfile: ./Dockerfile
    ports:
      - "6379:6379"
  ade_loadtesting_influxdb:
    image: ade-loadtesting-influxdb
    container_name: influxdb
    build:
      context: ./test/ADE.LoadTests/influxdb
      dockerfile: ./Dockerfile
    ports:
      - "8083:8083"
      - "8086:8086"
      - "2003:2003"
  ade_loadtesting_grafana:
    image: ade-loadtesting-grafana
    container_name: grafana
    build:
      context: ./test/ADE.LoadTests/grafana
      dockerfile: ./Dockerfile
    environment:
      - INFLUXDB_HOSTNAME
      - INFLUXDB_PORT
    ports:
      - "3000:3000"
